server:
  port: 8082

keycloak:
  auth-server-url: http://localhost:8888
  realm: timestamp-realm
  resource: timestamp-client
  credentials:
    secret: "**********"
  use-resource-role-mappings: true
  bearer-only: true
  ssl-required: NONE

spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8888/realms/timestamp-realm

  datasource:
    url: jdbc:postgresql://localhost:5432/postgres
    username: postgres
    password: admin

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

  data:
    mongodb:
      uri: mongodb://localhost:27017/POC

  kafka:
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring:
          json:
            trusted:
              packages: '*'

    consumer:
      bootstrap-servers: localhost:9092
      group-id: employee-consumer
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: '*'

    listener:
      ack-mode: MANUAL_IMMEDIATE

logging:
  level:
    org.keycloak: DEBUG
    org.springframework.security: DEBUG
